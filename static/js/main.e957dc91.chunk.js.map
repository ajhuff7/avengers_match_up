{"version":3,"sources":["components/AvengerCard/index.js","components/Wrapper/index.js","components/Title/index.js","App.js","index.js"],"names":["AvengerCard","props","className","onClick","chooseAvenger","id","alt","src","image","Wrapper","children","Title","score","highScore","randomize","array","i","length","x","Math","floor","random","hold","App","state","avengers","chooseCard","indexOf","push","scoreIncrement","randoAvenger","alert","setState","this","map","avenger","Component","ReactDOM","render","document","getElementById"],"mappings":"qjEAceA,MAXf,SAAqBC,GAAQ,IAAD,EAC1B,OACE,wBAAKC,UAAU,OAAOC,QAAS,kBAAMF,EAAMG,cAAcH,EAAMI,MAA/D,0BAA8E,UAA9E,yBACE,qBAAKH,UAAU,gBAAf,SACE,qBAAKI,IAAKL,EAAMI,GAAIE,IAAKN,EAAMO,WAFnC,K,MCEWC,MAJf,SAAiBR,GACf,OAAO,qBAAKC,UAAU,UAAf,SAA0BD,EAAMS,Y,MCG1BC,MAJf,SAAeV,GACb,OAAO,qBAAIC,UAAU,QAAd,gCAA0CD,EAAMS,SAAhD,WAAkET,EAAMW,MAAxE,gBAA4FX,EAAMY,c,OCG3G,SAASC,EAAUC,GACjB,IAAK,IAAIC,EAAID,EAAME,OAAS,EAAGD,EAAI,EAAGA,IAAK,CACzC,IAAIE,EAAIC,KAAKC,MAAMD,KAAKE,UAAYL,EAAE,IAClCM,EAAOP,EAAMC,GACjBD,EAAMC,GAAKD,EAAMG,GACjBH,EAAMG,GAAKI,EAEb,OAAOP,E,IA8EQQ,E,4MAxEfC,MAAQ,CACNC,WACAb,MAAO,EACPC,UAAW,EACXa,WAAY,I,EAIdtB,cAAgB,SAAAC,GAEZ,IAAIqB,EAAa,EAAKF,MAAME,WACxBd,EAAQ,EAAKY,MAAMZ,MACnBC,EAAY,EAAKW,MAAMX,WAEK,IAA5Ba,EAAWC,QAAQtB,IACrBqB,EAAWE,KAAKvB,GAChB,EAAKwB,iBACL,EAAKC,gBAGuB,KAArB,EAAKN,MAAMZ,OAClBmB,MAAM,UACN,EAAKC,SAAS,CACZpB,MAAO,EACPc,WAAY,OAKd,EAAKM,SAAS,CACZpB,MAAO,EACPc,WAAY,KAEdK,MAAM,aAGJnB,EAAQC,IACVA,EAAYD,EACZ,EAAKoB,SAAS,CAAEnB,gB,EAIpBgB,eAAiB,WACf,EAAKG,SAAS,CAAEpB,MAAO,EAAKY,MAAMZ,MAAQ,K,EAG5CkB,aAAe,WACb,EAAKE,SAAS,CAAEP,SAAUX,EAAUW,M,uDAI5B,IAAD,OACP,OACE,eAAC,EAAD,WACG,cAAC,EAAD,CACGb,MAAOqB,KAAKT,MAAMZ,MAClBC,UAAWoB,KAAKT,MAAMX,YAErBoB,KAAKT,MAAMC,SAASS,KAAI,SAAAC,GAAO,OAC9B,cAAC,EAAD,CACE9B,GAAI8B,EAAQ9B,GACZG,MAAO2B,EAAQ3B,MACfJ,cAAe,EAAKA,0B,GAhEpBgC,a,MCblBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.e957dc91.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nfunction AvengerCard(props) {\n  return (\n    <div className=\"card\" onClick={() => props.chooseAvenger(props.id)} className=\"choose\">\n      <div className=\"img-container\">\n        <img alt={props.id} src={props.image} />\n      </div>\n\n    </div>\n  );\n}\n\nexport default AvengerCard;","import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n  return <div className=\"wrapper\">{props.children}</div>;\n}\n\nexport default Wrapper;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Title(props) {\n  return <h1 className=\"title\"> AVENGERS ASSEMBLE {props.children} Score: {props.score} High Score: {props.highScore}</h1>;\n}\n\nexport default Title;\n","import React, { Component } from \"react\";\nimport AvengerCard from \"./components/AvengerCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport avengers from \"./avengers.json\";\n\n\nfunction randomize(array) {\n  for (let i = array.length - 1; i > 0; i--) {\n    let x = Math.floor(Math.random() * (i+1));\n    let hold = array[i];\n    array[i] = array[x];\n    array[x] = hold\n  }\n  return array\n};\n\n\nclass App extends Component {\n  // Setting this.state.avengers to the friends json array\n  state = {\n    avengers, \n    score: 0,\n    highScore: 0,\n    chooseCard: []\n  };\n\n\n  chooseAvenger = id => {\n    // Scores based on avenger selected and randomizes the deck.\n      let chooseCard = this.state.chooseCard;\n      let score = this.state.score;\n      let highScore = this.state.highScore;\n  \n      if (chooseCard.indexOf(id) === -1) {\n        chooseCard.push(id);\n        this.scoreIncrement();\n        this.randoAvenger();\n      } \n      \n      else if (this.state.score === 10) {\n        alert(\"WINNER\")\n        this.setState({\n          score: 0,\n          chooseCard: []\n        });\n      } \n      \n      else {\n        this.setState({\n          score: 0,\n          chooseCard: []\n        });\n        alert(\"YOU LOSE\")\n      }\n  \n      if (score > highScore) {\n        highScore = score;\n        this.setState({ highScore })\n      }\n    };\n  \n    scoreIncrement = () => {\n      this.setState({ score: this.state.score + 1 });\n    }\n  \n    randoAvenger = () => {\n      this.setState({ avengers: randomize(avengers) })\n    }\n  \n  \n    render() {\n      return (    \n        <Wrapper>\n           <Title \n              score={this.state.score}\n              highScore={this.state.highScore} />\n  \n              {this.state.avengers.map(avenger => (\n                <AvengerCard\n                  id={avenger.id}\n                  image={avenger.image}\n                  chooseAvenger={this.chooseAvenger}\n                  />\n              ))}\n        \n      \n        </Wrapper>\n      ); \n    }\n  }\n  \n  export default App;\n\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}